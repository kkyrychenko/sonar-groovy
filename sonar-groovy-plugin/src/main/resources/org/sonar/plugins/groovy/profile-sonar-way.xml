<profile>
  <name>Sonar way</name>
  <language>grvy</language>
  <rules>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.AssignmentInConditionalRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchErrorRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchExceptionRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchNullPointerExceptionRule</key>
      <priority>CRITICAL</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchRuntimeExceptionRule</key>
      <priority>CRITICAL</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.CloneableWithoutCloneRule</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.braces.ElseBlockBracesRule</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsPublicControllerMethodRule.fixed</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsServletContextReferenceRule</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsStatelessServiceRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.NestedBlockDepthRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.NestedSynchronizationRule</key>
      <priority>CRITICAL</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.PrintStackTraceRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.PrintlnRule</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ReturnFromFinallyBlockRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedMethodRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.SystemErrPrintRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.SystemOutPrintRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.ThreadYieldRule</key>
      <priority>CRITICAL</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowErrorRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowExceptionRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowThrowableRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.UnnecessaryGroovyImportRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.UnusedImportRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateFieldRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateMethodRule</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedVariableRule.fixed</key>
      <priority>MAJOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule</key>
      <priority>MAJOR</priority>
    </rule>


    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DuplicateCaseStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyCatchBlockRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyElseBlockRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyFinallyBlockRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyForStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyIfStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyInstanceInitializerRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyMethodRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyStaticInitializerRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptySwitchStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptySynchronizedStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyTryBlockRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyWhileStatementRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EqualsAndHashCodeRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EqualsOverloadedRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyClassRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.DuplicateImportRule</key>
      <priority>MAJOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.ImportFromSamePackageRule</key>
      <priority>MAJOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.ImportFromSunPackagesRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ClassNameSameAsFilenameRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateMethodParameterRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedMethodParameterRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.ConfusingTernaryRule</key>
      <priority>MAJOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.InvertedIfElseRule</key>
      <priority>MAJOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.VectorIsObsoleteRule</key>
      <priority>MINOR</priority>
    </rule>

    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.HashtableIsObsoleteRule</key>
      <priority>MINOR</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.sonar.plugins.groovy.codenarc.DynamicTypedRule</key>
      <priority>MINOR</priority>
    </rule>
  </rules>
</profile>
